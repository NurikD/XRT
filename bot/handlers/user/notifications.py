from aiogram import F, Router
from aiogram.types import CallbackQuery
from aiogram.utils.markdown import hide_link
from aiogram import types
from bot.database.methods.update import set_notice_mode, disable_all_notice, latest_activity
from bot.database.methods.get import notifications_exists

from bot.handlers.user.utils import deadline_message

from bot.keyboards.user.reply import *
from bot.keyboards.user.inline import *

router = Router()


# –í—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π #

@router.message(F.text == 'üîî–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è')
async def notice_modes(message: types.Message):
    await message.answer(
        text=f"{hide_link('https://telegra.ph/file/4c3eec48f6538e097ba9e.png')}"
             "–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π, –Ω–∞–∂–∞–≤ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üëá",
        reply_markup=notifications_settings()  # –£–±—Ä–∞–ª –ø–µ—Ä–µ–¥–∞—á—É —Ä–æ–ª–∏
    )

    await latest_activity(message.from_user.id)  # –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤—Ä–µ–º—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏


# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è –±–æ—Ç–∞ #

@router.callback_query(F.data == 'notice_in_bot')
async def bot_mode(call: CallbackQuery):
    notifications = await notifications_exists(call.from_user.id)

    if await deadline_message(call) is False:
        await call.message.edit_text(
            text="–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è –±–æ—Ç–∞:",
            reply_markup=notice_selection_options(notifications, 'bot')
        )

    await call.answer()


# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è –ø–æ—á—Ç—ã #

@router.callback_query(F.data == 'notice_in_mail')
async def mail_mode(call: CallbackQuery):
    if await deadline_message(call) is False:
        notifications = await notifications_exists(call.from_user.id)
        await call.message.edit_text(
            text="–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è –ø–æ—á—Ç—ã: ",
            reply_markup=notice_selection_options(notifications, 'email')
        )

    await call.answer()


# –õ–æ–≤–∏–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º –∏ –∑–∞–Ω–æ—Å–∏–º –µ–≥–æ –≤ –ë–î #

@router.callback_query(F.data.startswith('set_'))
async def set_mode(call: CallbackQuery):
    notification_key = call.data.split('set_')[1]
    user_id = call.from_user.id

    await set_notice_mode(user_id, notification_key)

    if notification_key.startswith('bot'):
        await bot_mode(call)

    else:
        await mail_mode(call)

    await call.answer()


# –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π #

@router.callback_query(F.data.startswith('back_'))
async def back_to_main(call: CallbackQuery):
    if await deadline_message(call) is False:
        await call.message.edit_text(
            text=f"{hide_link('https://telegra.ph/file/4c3eec48f6538e097ba9e.png')}"
                 "–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π, –Ω–∞–∂–∞–≤ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üëá",
            reply_markup=notifications_settings()  # –£–±—Ä–∞–ª –ø–µ—Ä–µ–¥–∞—á—É —Ä–æ–ª–∏
        )

    await call.answer()


# –û—Ç–∫–ª—é—á–∞–µ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –±–æ—Ç–∞/–ø–æ—á—Ç—ã #

@router.callback_query(F.data.startswith('disable'))
async def disable_notifications(call: CallbackQuery):
    notification_key = call.data.split('_')[1]
    user_id = call.from_user.id
    await disable_all_notice(user_id, notification_key)

    if notification_key.startswith('bot'):
        await bot_mode(call)

    else:
        await mail_mode(call)

    await call.answer()
